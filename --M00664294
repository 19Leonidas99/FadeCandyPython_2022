
import opc
from time import sleep

client = opc.Client('localhost:7890')
LED = [(0, 0, 0)] * 360

# Leds=======================================================================================================


# Rock Paper Scissors
def V():
    for column in range(19, 20):
        for rows in range(0, 1):
            LED[column + rows * 60] = (255, 80, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(20, 21):
        for rows in range(0, 2):
            LED[column + rows * 60] = (255, 100, 0)
        client.put_pixels(LED)
        sleep(0.1)
    for column in range(21, 22):
        for rows in range(1, 3):
            LED[column + rows * 60] = (255, 120, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(22, 23):
        for rows in range(2, 4):
            LED[column + rows * 60] = (255, 155, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(23, 24):
        for rows in range(3, 5):
            LED[column + rows * 60] = (255, 200, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(24, 25):
        for rows in range(4, 6):
            LED[column + rows * 60] = (255, 255, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(25, 26):
        for rows in range(3, 5):
            LED[column + rows * 60] = (255, 200, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(26, 27):
        for rows in range(2, 4):
            LED[column + rows * 60] = (255, 155, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(27, 28):
        for rows in range(1, 3):
            LED[column + rows * 60] = (255, 120, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(28, 29):
        for rows in range(0, 2):
            LED[column + rows * 60] = (255, 100, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(29, 30):
        for rows in range(0, 1):
            LED[column + rows * 60] = (255, 80, 0)
        client.put_pixels(LED)
        sleep(0.1)


def S():
    for column in range(37, 38):
        for rows in range(1, 3):
            LED[column + rows * 60] = (255, 80, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(36, 37):
        for rows in range(0, 2):
            LED[column + rows * 60] = (255, 105, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(32, 36):
        for rows in range(0, 1):
            LED[column + rows * 60] = (255, 110, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(31, 32):
        for rows in range(0, 2):
            LED[column + rows * 60] = (255, 130, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(30, 31):
        for rows in range(1, 2):
            LED[column + rows * 60] = (255, 150, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(32, 34):
        for rows in range(2, 3):
            LED[column + rows * 60] = (255, 130, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(34, 36):
        for rows in range(3, 4):
            LED[column + rows * 60] = (255, 130, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(36, 37):
        for rows in range(4, 6):
            LED[column + rows * 60] = (255, 110, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(37, 38):
        for rows in range(4, 5):
            LED[column + rows * 60] = (255, 80, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(32, 36):
        for rows in range(5, 6):
            LED[column + rows * 60] = (255, 110, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(31, 32):
        for rows in range(4, 6):
            LED[column + rows * 60] = (255, 130, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(32, 34):
        for rows in range(2, 3):
            LED[column + rows * 60] = (255, 130, 0)
        client.put_pixels(LED)
        sleep(0.1)

    for column in range(30, 31):
        for rows in range(3, 5):
            LED[column + rows * 60] = (255, 130, 0)
        client.put_pixels(LED)
        sleep(0.1)


def Rock():
    for column in range(0, 4):
        for rows in range(0, 6):
            LED[column + rows * 60] = (255, 155, 0)
        client.put_pixels(LED)
        sleep(0.1)


V()
S()